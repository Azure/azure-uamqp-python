steps:
  - pwsh: |
      $EHSdkPath='azure-sdk-for-python/sdk/eventhub/azure-eventhub'
      $EHTestResultsPath='eventhub/azure-eventhub/test-results-live.xml'
      $EHIgnoreTests='--ignore=tests/perfstress_tests --ignore=tests/scripts'
      $EHSdkType='eventhub'
      Write-Output "##vso[task.setvariable variable=SdkType;]$EHSdkType"
      Write-Output "##vso[task.setvariable variable=SdkPath;]$EHSdkPath"
      Write-Output "##vso[task.setvariable variable=TestResultsPath;]$EHTestResultsPath"
      Write-Output "##vso[task.setvariable variable=IgnoreTests;]$EHIgnoreTests"
    condition: eq(variables['SDK'], 'EventHub')
    displayName: 'Get variables if EventHub'
  - pwsh: |
      $SBSdkPath='azure-sdk-for-python/sdk/servicebus/azure-servicebus'
      $SBTestResultsPath='servicebus/azure-servicebus/test-results-live.xml'
      $SBIgnoreTests='--ignore=tests/perf_tests --ignore=tests/stress_tests'
      $SBSdkType='servicebus'
      Write-Output "##vso[task.setvariable variable=SdkType;]$SBSdkType"
      Write-Output "##vso[task.setvariable variable=SdkPath;]$SBSdkPath"
      Write-Output "##vso[task.setvariable variable=TestResultsPath;]$SBTestResultsPath"
      Write-Output "##vso[task.setvariable variable=IgnoreTests;]$SBIgnoreTests"
    condition: eq(variables['SDK'], 'ServiceBus')
    displayName: 'Get variables if ServiceBus'
  - script: |
      echo "SDKPath: $(SdkPath)"
      echo "Tests: $(TestResultsPath)"
      git clone https://github.com/Azure/azure-sdk-for-python.git --single-branch --depth 1
    displayName: 'Clone azure-sdk-for-python'

  - pwsh: | 
      eng/common/scripts/Import-AzModules.ps1

      $subscriptionConfiguration = @'
        $(sub-config-azure-cloud-test-resources)
      '@ | ConvertFrom-Json -AsHashtable;

      eng/common/TestResources/New-TestResources.ps1 `
        -ResourceType test `
        -ServiceDirectory $(SDKType) `
        -Location westus `
        -DeleteAfterHours 8 `
        @subscriptionConfiguration `
        -CI `
        -Force `
        -Verbose | Out-Null
    workingDirectory: azure-sdk-for-python
    displayName: Deploy test resources
    env:
        TEMP: $(Agent.TempDirectory)
  - task: DownloadPipelineArtifact@2
    displayName: 'Downloading artifact'
    inputs:
      source: 'current'
      patterns: '$(DownloadArtifactFolder)/*.whl'
  - pwsh: |
      $whlfile = Get-ChildItem -Filter *.whl $(Pipeline.Workspace)/$(DownloadArtifactFolder) | Select-Object -First 1 -ExpandProperty Name
      Write-Output "##vso[task.setvariable variable=DownloadArtifactWhl]$whlfile"
      Get-ChildItem $(Pipeline.Workspace)/$(DownloadArtifactFolder)
    displayName: 'Get name of whl file to install'
  - template: /.azure-pipelines/test-proxy-tool.yml
    parameters:
      runProxy: true
      rootFolder: azure-sdk-for-python
      templateRoot: azure-sdk-for-python

  - pwsh: |
      python -m pip install azure-sdk-for-python/tools/azure-sdk-tools[build]
      sdk_build "azure-eventhub,azure-eventhub-checkpointstoreblob-aio,azure-eventhub-checkpointstoreblob" -d $(Build.ArtifactStagingDirectory)
    displayName: 'Build the EH Wheels Separately'
    workingDirectory: $(Build.SourcesDirectory)/azure-sdk-for-python
    condition: eq(variables['SDK'], 'EventHub')

  - pwsh: |
      echo "Operating in $(SdkPath)"
      python --version
      echo "Installing $DownloadArtifactWhl"
      echo "Full name $(Pipeline.Workspace)/$(DownloadArtifactFolder)/$(DownloadArtifactWhl)"
      python -m pip install $(Pipeline.Workspace)/$(DownloadArtifactFolder)/$(DownloadArtifactWhl) --force
      python -m pip install pytest
      python -m pip install futures
      python -m pip install ../../core/azure-core
      python -m pip install ../../identity/azure-identity
      python -m pip install azure-mgmt-eventhub<=10.1.0
      python -m pip install azure-mgmt-resource==20.0.0
      python -m pip install "aiohttp; python_version<'3.12'"
      python -m pip install websocket-client
      Get-ChildItem -R -Path $(Build.ArtifactStagingDirectory) -Filter *.whl | ForEach-Object { python -m pip install $_.FullName }
      python -m pip list
      python -m pytest tests -v --doctest-modules $(IgnoreTests) --junitxml=junit/$(TestResultsPath)
    displayName: 'Run tests'
    workingDirectory: $(SdkPath)
    env:
      AZURE_SUBSCRIPTION_ID: $(azure-subscription-id)
      AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)
      AZURE_CLIENT_ID: $(aad-azure-sdk-test-client-id)
      AZURE_CLIENT_SECRET: $(aad-azure-sdk-test-client-secret)
      AZURE_TEST_RUN_LIVE: 'true'

  - pwsh: |
      eng/common/scripts/Import-AzModules.ps1

      $subscriptionConfiguration = @'
        $(sub-config-azure-cloud-test-resources)
      '@ | ConvertFrom-Json -AsHashtable;

      eng/common/TestResources/Remove-TestResources.ps1 `
        @subscriptionConfiguration `
        -ResourceType test `
        -ServiceDirectory $(SDKType) `
        -CI `
        -Force `
        -Verbose
    workingDirectory: azure-sdk-for-python
    displayName: Remove test resources
    condition: and(eq(variables['CI_HAS_DEPLOYED_RESOURCES'], 'true'), ne(variables['Skip.RemoveTestResources'], 'true'))
    continueOnError: true
  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/$(TestResultsPath)'
      testResultsFormat: 'JUnit'
      testRunTitle: '$(OSArch) $(SDK) Python $(PythonVersion)'
