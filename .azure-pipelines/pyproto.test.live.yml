trigger:
  branches:
    include:
    - pyproto

variables:
  PythonVersion27: '2.7'
  PythonVersion36: '3.6'
  PythonVersion37: '3.7'
  PythonVersion38: '3.8'
  PythonVersion39: '3.9'
  GetPip: 'https://bootstrap.pypa.io/get-pip.py'

jobs:
  - job: 'Windows2019'
    timeoutInMinutes: 90
    pool:
      name: 'azsdk-pool-mms-win-2019-general'
      vmImage: 'MMS2019'
    strategy:
      matrix:
        x64 Python 2.7:
          PythonVersion: '$(PythonVersion27)'
        x64 Python 3.8:
          PythonVersion: '$(PythonVersion38)'
    variables:
      PythonArchitecture: 'x64'
      OSArch: 'Windows'
    steps:
      - template: /.azure-pipelines/use-python-version.yml
        parameters:
          architecture: '$(PythonArchitecture)'
          versionSpec: '$(PythonVersion)'
      - template: /.azure-pipelines/pyproto-live-test-template.yml

  - job: 'MacOS1015'
    timeoutInMinutes: 90
    pool:
      name: 'Azure Pipelines'
      vmImage: 'macOS-10.15'
    strategy:
      matrix:
        Python 3.6:
          PythonVersion: '$(PythonVersion36)'
          OSArch: 'MacOS'
          PythonArchitecture: '10.15'
    steps:
      - template: /.azure-pipelines/use-python-version.yml
        parameters:
          architecture: '$(PythonArchitecture)'
          versionSpec: '$(PythonVersion)'
      - template: /.azure-pipelines/pyproto-live-test-template.yml

  - job: 'Ubuntu2004'
    timeoutInMinutes: 90
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04
    strategy:
      matrix:
        Python 3.7:
          PythonVersion: '$(PythonVersion37)'
        Python 3.9:
          PythonVersion: '$(PythonVersion39)'
    variables:
      PythonArchitecture: '20.04'
      OSArch: 'Linux'
    steps:
      - template: /.azure-pipelines/use-python-version.yml
        parameters:
          architecture: '$(PythonArchitecture)'
          versionSpec: '$(PythonVersion)'
      - template: /.azure-pipelines/pyproto-live-test-template.yml
