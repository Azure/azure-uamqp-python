trigger:
  - master

variables:
  PythonVersion36: '3.6'
  PythonVersion37: '3.7'
  PythonVersion38: '3.8'
  PythonVersion39: '3.9'
  PythonVersion310: '3.10.0'
  GetPip: 'https://bootstrap.pypa.io/get-pip.py'

jobs:
  
  - job: 'Linux'

    timeoutInMinutes: 120

    pool:
      vmImage: 'ubuntu-18.04'

    strategy:
      maxParallel: 1
      matrix:
        Python 3.6:
          PythonVersion: '$(PythonVersion36)'
        Python 3.7:
          PythonVersion: '$(PythonVersion37)'
        Python 3.8:
          PythonVersion: '$(PythonVersion38)'
        Python 3.9:
          PythonVersion: '$(PythonVersion39)'
        Python 3.10:
          PythonVersion: '$(PythonVersion310)'

    steps:
      - template: /.azure-pipelines/use-python-version.yml
        parameters:
          versionSpec: '$(PythonVersion)'

      - script: |
          echo "Prepending PATH environment variable with directory: $HOME/.local/bin"
          echo "##vso[task.prependpath]$HOME/.local/bin"
        displayName: 'Prepare PATH'

      - script: |
          python --version
          curl -sS $(GetPip) | python - --user
          python -m pip --version
          python -m pip install --user -r dev_requirements.txt
        displayName: 'Install dependencies'

      - script: python setup.py bdist_wheel
        displayName: 'Build uAMQP Wheel'
        env:
          UAMQP_REBUILD_PYX: 'True'

      - script: ls ./dist
        displayName: 'Check output'

      - script: |
          python -m pip install --user --ignore-installed ./dist/*.whl
          pytest tests --doctest-modules --junitxml=junit/test-results-c.xml
          pytest samples --doctest-modules --junitxml=junit/test-results-live.xml
        displayName: 'Run tests'
        env:
          EVENT_HUB_HOSTNAME: $(python-eh-livetest-event-hub-hostname)
          EVENT_HUB_NAME: $(python-eh-livetest-event-hub-name)
          EVENT_HUB_SAS_POLICY: $(python-eh-livetest-event-hub-sas-policy)
          EVENT_HUB_SAS_KEY: $(python-eh-livetest-event-hub-sas-key)
          IOTHUB_HOSTNAME: $(python-iothub-livetest-host-name)
          IOTHUB_HUB_NAME: $(python-iothub-livetest-hub-name)
          IOTHUB_DEVICE: $(python-eh-livetest-event-hub-iothub-device)
          IOTHUB_ENDPOINT: $(python-iothub-livetest-endpoint)
          IOTHUB_SAS_POLICY: $(python-iothub-livetest-sas-policy)
          IOTHUB_SAS_KEY: $(python-iothub-livetest-sas-key)

      - task: PublishTestResults@2
        displayName: 'Publish test results'
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-results-*.xml'
          testResultsFormat: 'JUnit'
          testRunTitle: 'Linux Python $(PythonVersion)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish wheel artifact'
        inputs:
          artifactName: uamqp-linux-$(PythonVersion)-whl
          pathToPublish: 'dist'


  - job: 'SDK_LiveTest_ubuntu1804_39'
    timeoutInMinutes: 300
    dependsOn: 'Linux'
    pool:
      name: 'azsdk-pool-mms-ubuntu-1804-general'
      vmImage: 'MMSUbuntu18.04'
    strategy:
      matrix:
        EventHub Python 3.9:
          PythonVersion: '$(PythonVersion39)'
          SDK: 'EventHub'
        EventHub Python 3.10:
          PythonVersion: '$(PythonVersion310)'
          SDK: 'EventHub'
        ServiceBus Python 3.9:
          PythonVersion: '$(PythonVersion39)'
          SDK: 'ServiceBus'
        ServiceBus Python 3.10:
          PythonVersion: '$(PythonVersion310)'
          SDK: 'ServiceBus'
    variables:
      OSArch: 'Linux'
      DownloadArtifactFolder: 'uamqp-linux-$(PythonVersion)-whl'
    steps:
      - template: /.azure-pipelines/use-python-version.yml
        parameters:
          versionSpec: '$(PythonVersion)'
      - template: /.azure-pipelines/test-eh-sb-sdk.yml
